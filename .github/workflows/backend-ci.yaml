name: backend-ci

permissions:
  contents: read

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "backend/**"

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/gencare-backend

jobs:
  ci:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.body, '#skip') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate cache key
        id: cache-key
        run: |
          DOCKERFILE_HASH=$(sha256sum backend/Dockerfile | awk '{print $1}')
          FILES_HASH=$(find backend/ -type f -not -path 'backend/Dockerfile' -exec sha256sum {} + | sort | sha256sum | awk '{print $1}')
          COMBINED_HASH=$(echo "${DOCKERFILE_HASH}${FILES_HASH}" | sha256sum | awk '{print $1}')
          echo "cache-key=$COMBINED_HASH" >> $GITHUB_OUTPUT

      - name: Cache Docker images
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.cache-key.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.IMAGE_NAME }}:ci-${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          build-args: |
            CACHEBUST=${{ steps.cache-key.outputs.cache-key }}
